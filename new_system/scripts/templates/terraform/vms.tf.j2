# ============================================================
# Virtual Machines Configuration
# Generated from topology.yaml v{{ topology_version }}
# DO NOT EDIT MANUALLY - Regenerate with scripts/generate-terraform.py
# ============================================================

{% for vm in vms %}
# ============================================================
# VM: {{ vm.name }} ({{ vm.type }})
# Role: {{ vm.role }}
# Description: {{ vm.description }}
# ============================================================

resource "proxmox_virtual_environment_vm" "{{ vm.id | replace('-', '_') }}" {
  node_name = var.proxmox_node
  vm_id     = {{ vm.vmid }}
  name      = "{{ vm.name }}"
  description = "{{ vm.description }}"

  tags = [{% for tag in vm.tags %}"{{ tag }}"{% if not loop.last %}, {% endif %}{% endfor %}]

  # Resources
  cpu {
    cores   = {{ vm.resources.cores }}
    sockets = {{ vm.resources.sockets | default(1) }}
    {% if vm.resources.cpu_type %}
    type    = "{{ vm.resources.cpu_type }}"
    {% endif %}
  }

  memory {
    dedicated = {{ vm.resources.memory_mb }}
    {% if vm.resources.balloon_mb %}
    floating  = {{ vm.resources.balloon_mb }}
    {% endif %}
  }

  # Boot configuration
  {% if vm.boot %}
  boot_order = ["{{ vm.boot.order }}"]
  on_boot    = {{ vm.boot.onboot | default(true) | lower }}
  {% endif %}

  # Storage
  {% for disk in vm.storage %}
  disk {
    datastore_id = "{{ storage_map[disk.storage_ref].pool }}"
    file_id      = null
    interface    = "{{ disk.disk_id }}"
    size         = {{ disk.size_gb }}
    {% if disk.format %}
    file_format  = "{{ disk.format }}"
    {% endif %}
    {% if disk.cache %}
    cache        = "{{ disk.cache }}"
    {% endif %}
    {% if disk.discard %}
    discard      = "{{ disk.discard }}"
    {% endif %}
    {% if disk.ssd is defined %}
    ssd          = {{ disk.ssd | lower }}
    {% endif %}
  }
  {% endfor %}

  # Network interfaces
  {% for nic in vm.networks %}
  network_device {
    bridge  = "{{ bridge_map[nic.bridge_ref].interface }}"
    model   = "{{ nic.model | default('virtio') }}"
    {% if nic.firewall is defined %}
    firewall = {{ nic.firewall | lower }}
    {% endif %}
  }
  {% endfor %}

  # OS-specific initialization
  {% if vm.os %}
  # OS: {{ vm.os.type }} {{ vm.os.version | default('') }}
  {% endif %}

  # Lifecycle
  lifecycle {
    ignore_changes = [
      network_device,  # Managed by Terraform
    ]
  }

  {% if vm.boot and vm.boot.startup_order %}
  # Startup order: {{ vm.boot.startup_order }}
  startup {
    order      = {{ vm.boot.startup_order }}
    up_delay   = 30
    down_delay = 30
  }
  {% endif %}
}

{% endfor %}

# ============================================================
# Outputs
# ============================================================

output "vms" {
  description = "Virtual machines configuration"
  value = {
    {% for vm in vms %}
    {{ vm.id | replace('-', '_') }} = {
      id   = proxmox_virtual_environment_vm.{{ vm.id | replace('-', '_') }}.vm_id
      name = proxmox_virtual_environment_vm.{{ vm.id | replace('-', '_') }}.name
      {% if vm.networks %}
      {% for nic in vm.networks %}
      {% if nic.ip_config and nic.ip_config.address %}
      ip_{{ loop.index0 }} = "{{ nic.ip_config.address }}"
      {% endif %}
      {% endfor %}
      {% endif %}
    }
    {% endfor %}
  }
}
